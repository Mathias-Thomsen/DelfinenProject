Index: src/main/java/Ui/UserInterface.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Ui;\n\nimport ClubMember.ClubMember;\nimport Controller.Controller;\n\nimport java.time.LocalDate;\nimport java.util.ArrayList;\nimport java.util.Scanner;\nimport java.util.concurrent.TimeUnit;\n\npublic class UserInterface {\n    Scanner scanner = new Scanner(System.in);\n    boolean userChoiceFalse = false;\n    private String nameInput;\n    Controller controller = new Controller();\n\n    public void menu() {\n        controller.loadData();\n        int menuChoise = 0;\n        while (menuChoise != 9) {\n            System.out.println(\"\"\"\n                    -------------------------\n                    Sign in as:\n                    -------------------------\n                    1. Club manager\n                    2. Coach\n                    3. Cashier\n                    9. Exit program\n                    \"\"\");\n\n            do {\n                String valg = scanner.nextLine().trim();\n                try {\n                    menuChoise = Integer.parseInt(valg);\n                    userChoiceFalse = true;\n                } catch (NumberFormatException e) {\n                    System.out.print(\"There has been a error enter a valid number: \");\n                    scanner.nextLine();\n                }\n\n            } while (!userChoiceFalse);\n\n            switch (menuChoise) {\n                case 1 -> clubManagerMenu();\n                //case 2 -> coachMenu();\n                //case 3 -> cashierMenu();\n                case 9 -> exitProgram();\n                default -> System.out.println(\"Invalid Input\\n\");\n            }\n        }\n\n    }\n\n    public void clubManagerMenu() {\n        int menuChoise = 0;\n        System.out.println(\"\"\"\n                -------------------------\n                Club manager menu:\n                -------------------------\n                1. Create new member\n                2. Show list of members\n                3. Search for members\n                4. Edit member information\n                5. Delete current member\n                9. Go back to sign in\n                \"\"\");\n\n        do {\n            String valg = scanner.nextLine().trim();\n            try {\n                menuChoise = Integer.parseInt(valg);\n                userChoiceFalse = true;\n            } catch (NumberFormatException e) {\n                System.out.print(\"There has been a error enter a valid number: \");\n                scanner.nextLine();\n            }\n\n        } while (!userChoiceFalse);\n\n        switch (menuChoise) {\n            case 1 -> createMember();\n            case 2 -> showMenmbers();\n            case 3 -> searchMember();\n            case 4 -> editMember();\n            case 5 -> deleteMember();\n            case 9 -> menu();\n            default -> System.out.println(\"Invalid Input\\n\");\n        }\n    }\n\n    public void createMember() {\n\n        //Name\n        System.out.println(\"--------------------------------------------------------\");\n        System.out.println(\"Input new member name: \");\n        String nameInput = scanner.nextLine();\n        while (nameInput.isEmpty() || nameInput.equals(\" \")) {\n            System.out.print(\"Invalid input try again:\");\n            nameInput = scanner.nextLine();\n        }\n\n        //Age\n        System.out.println(\"--------------------------------------------------------\");\n        System.out.println(\"Input new member birthday: \");\n        System.out.print(\"Year (fx 2000): \");\n        while (!scanner.hasNextInt()) {\n            System.out.println(\"Member age can only be numbers, try again\");\n            scanner.nextLine();\n        }\n        int getBirthYear = scanner.nextInt();\n        scanner.nextLine();\n        System.out.print(\"Month (fx 9): \");\n        while (!scanner.hasNextInt()) {\n            System.out.println(\"Member age can only be numbers, try again\");\n            scanner.nextLine();\n        }\n        int getBirthMonth = scanner.nextInt();\n        scanner.nextLine();\n        System.out.print(\"Day (fx 18):\");\n        while (!scanner.hasNextInt()) {\n            System.out.println(\"Member age can only be numbers, try again\");\n            scanner.nextLine();\n        }\n        int getBirthDay = scanner.nextInt();\n        scanner.nextLine();\n\n        LocalDate currentDate = LocalDate.now();\n        LocalDate birthDate = LocalDate.of(getBirthYear, getBirthMonth, getBirthDay);\n\n        int ageInput = controller.calculateAge(birthDate, currentDate);\n\n\n        //Activity status\n        System.out.println(\"--------------------------------------------------------\");\n        System.out.println(\"Input new member activity status (active/passive): \");\n        String activityInput;\n        boolean setActive;\n        boolean activeOrPassive;\n        while (true) {\n            activityInput = scanner.nextLine().trim().toLowerCase();\n            if (activityInput.equals(\"active\") || activityInput.equals(\"a\")) {\n                activeOrPassive = true;\n                setActive = true;\n                break;\n            } else if (activityInput.equals(\"passive\") || activityInput.equals(\"p\")) {\n                activeOrPassive = true;\n                setActive = false;\n                break;\n            } else {\n                System.out.println(\"You have to type active/passive or (a/p)\");\n            }\n        }\n\n        //Exerciser/competition\n        System.out.println(\"--------------------------------------------------------\");\n        System.out.println(\"Input new member activity status (Exerciser/competition): \");\n        String swim;\n        boolean exerciserOrCompetition;\n\n        while (true) {\n            swim = scanner.nextLine().trim().toLowerCase();\n            if (swim.equals(\"exerciser\") || swim.equals(\"e\")) {\n                exerciserOrCompetition = true;\n                swim = \"Exerciser\";\n                break;\n            } else if (swim.equals(\"competition\") || swim.equals(\"c\")) {\n                exerciserOrCompetition = true;\n                swim = \"Competition\";\n                break;\n            } else {\n                System.out.println(\"You have to type exerciser/competition or (e/c)\");\n            }\n        }\n\n        //Create member\n        controller.createClubMember(nameInput, ageInput, setActive, swim);\n        controller.junoirOrsenoir();\n        controller.setClubMemberNumber();\n        controller.saveData(); //save to the file every time we make a new member.\n    }\n\n    public void showMenmbers() {\n        for (ClubMember controller : controller.getMembers()) {\n            System.out.println(\"------------------\\n\"\n                    + \"Membership Number:......... \" + controller.getMembershipNumber() + \"\\n\"\n                    + \"Name:...................... \" + controller.getName() + \"\\n\"\n                    + \"Age:....................... \" + controller.getAge() + \"\\n\"\n                    + \"Active Status:............. \" + (controller.isActivityStatus() ? \"Active\" : \"Passive\" )+ \"\\n\"\n                    + \"Junior or senior:.......... \" + controller.getMembershipType() + \"\\n\"\n                    + \"Exerciser or competition:.. \" + controller.isSwimType());\n        }\n    }\n\n    public void searchMember() {\n        System.out.println(\"-----------------------------------------------------\");\n        System.out.println(\"Type in the member you want to search for: \");\n\n        String searchTerm = scanner.nextLine().toLowerCase();\n        for (ClubMember controller : controller.findMember(searchTerm)) {\n            System.out.println(\"------------------\\n\"\n                    + \"Membership Number:......... \" + controller.getMembershipNumber() + \"\\n\"\n                    + \"Name:...................... \" + controller.getName() + \"\\n\"\n                    + \"Age:....................... \" + controller.getAge() + \"\\n\"\n                    + \"Active Status:............. \" + (controller.isActivityStatus() ? \"Active\" : \"Passive\") + \"\\n\"\n                    + \"Junior or senior:.......... \" + controller.getMembershipType() + \"\\n\"\n                    + \"Exerciser or competition:.. \" + controller.isSwimType());\n        }\n        if (controller.findMember(searchTerm).isEmpty()) {\n            System.out.println(\"No result\");\n        }\n\n    }\n\n    public void editMember() {\n        System.out.println(\"-----------------------------------------------------\");\n        System.out.println(\"Search for the member you want to edit: \");\n        String userEditMember = scanner.nextLine();\n        ArrayList<ClubMember> searchEditResult = new ArrayList<>();\n\n        int index = 1;\n\n        for (ClubMember editMember : controller.getMembers()) {\n            String member = editMember.getName().toLowerCase();\n            if (member.contains(userEditMember.toLowerCase())) {\n                searchEditResult.add(editMember);\n                System.out.println(index++ + \":\" + editMember.getName());\n\n            }\n        }\n\n        System.out.print(\"Type in that member you want to edit: \");\n        String userEditNumberString = scanner.nextLine();\n        int userEditNumberInteger = Integer.parseInt(userEditNumberString);\n\n\n        ClubMember editMember = searchEditResult.get(userEditNumberInteger - 1);\n        System.out.println(\"You have selected: \" + editMember.getName());\n\n        System.out.println(\"If you don't want to edit press ENTER!\");\n\n\n        do {\n            System.out.println(\"Member name: \" + editMember.getName());\n\n            try {\n                System.out.print(\"Type your update here: \");\n                String newMemberName = scanner.nextLine().trim();\n                if (!newMemberName.isEmpty()) {\n                    editMember.setName(newMemberName);\n                }\n                userChoiceFalse = true;\n            } catch (NumberFormatException var11) {\n                System.out.println(\"Type a name with letters. If you don't want to edit press ENTER!\");\n            }\n        } while (!userChoiceFalse);\n\n        do {\n            System.out.println(\"Member age: \" + editMember.getAge());\n\n            try {\n                System.out.print(\"Type your update here: \");\n                String newAge = scanner.nextLine().trim().toLowerCase();\n                if (!newAge.isEmpty()) {\n                    editMember.setAge(newAge);\n                }\n\n                userChoiceFalse = true;\n            } catch (NumberFormatException var10) {\n                System.out.println(\"Type a age with numbers. If you don't want to edit press ENTER!\");\n            }\n        } while (!userChoiceFalse);\n\n        do {\n            System.out.println(\"Activity status \" + editMember.isActivityStatus());\n\n            try {\n                System.out.print(\"Type your update here (active/passive):  \");\n                boolean activeOrPassive;\n                while (true) {\n                    String activityEditInput = scanner.nextLine().trim().toLowerCase();\n                    if (!activityEditInput.isEmpty()) {\n\n                        if (activityEditInput.equals(\"active\") || activityEditInput.equals(\"a\")) {\n                            activeOrPassive = true;\n                            editMember.setActivityStatus(true);\n                            break;\n                        } else if (activityEditInput.equals(\"passive\") || activityEditInput.equals(\"p\")) {\n                            activeOrPassive = true;\n                            editMember.setActivityStatus(false);\n                            break;\n                        } else {\n                            System.out.println(\"You have to type active/passive or (a/p)\");\n                        }\n                    }\n                }\n                userChoiceFalse = true;\n            } catch (NumberFormatException var9) {\n                System.out.println(\"Type with letters. If you don't want to edit press ENTER!\");\n            }\n        } while (!userChoiceFalse);\n\n        do {\n            System.out.println(\"Membership type \" + editMember.getMembershipType());\n\n            try {\n                System.out.print(\"Type your update here: \");\n                String newMembershipType = scanner.nextLine().trim();\n                if (!newMembershipType.isEmpty()) {\n                    editMember.setMembershipType(newMembershipType);\n                }\n\n                userChoiceFalse = true;\n            } catch (NumberFormatException var8) {\n                System.out.println(\"Type af name with letters. If you don't want to edit press ENTER!\");\n            }\n        } while (!userChoiceFalse);\n\n        controller.junoirOrsenoir();\n        controller.setClubMemberNumber();\n        controller.saveData();\n\n\n    }\n\n    public void deleteMember() {\n        System.out.println(\"--------------------------------------------------------\");\n        System.out.println(\"Input the name of a member you want to delete: \");\n        String userDeleteMember = scanner.nextLine().trim().toLowerCase();\n        ArrayList<ClubMember> searchDeleteMember = new ArrayList<>();\n\n        int index = 1;\n\n        for (ClubMember deleteMember : controller.getClubMembers()) {\n            nameInput = deleteMember.getName().toLowerCase();\n            if (nameInput.contains(userDeleteMember.toLowerCase())) {\n                searchDeleteMember.add(deleteMember);\n                System.out.println(index++ + \": \" + deleteMember.getName());\n            }\n        }\n        System.out.println(\"Select the number of the member you want to delete: \");\n        String userDeleteNumberString = scanner.nextLine();\n        int userDeleteNumberInt = Integer.parseInt(userDeleteNumberString);\n\n        ClubMember deleteMember = searchDeleteMember.get(userDeleteNumberInt - 1);\n        controller.deleteMember(deleteMember);\n        System.out.println(\"You have now deleted: \" + deleteMember.getName() + \" from you membership\");\n\n        controller.saveData();\n    }\n\n    public void exitProgram() {\n        try {\n            System.out.print(\"Exiting Program\");\n            TimeUnit.SECONDS.sleep(1);\n            System.out.print(\".\");\n            TimeUnit.SECONDS.sleep(1);\n            System.out.print(\".\");\n            TimeUnit.SECONDS.sleep(1);\n            System.out.print(\".\");\n            System.exit(1);\n\n        } catch (InterruptedException e) {\n            System.out.println(\"System can not exit\");\n        }\n\n\n    }\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Ui/UserInterface.java b/src/main/java/Ui/UserInterface.java
--- a/src/main/java/Ui/UserInterface.java	(revision 5487a045566319c64898be7bfc063cf4d1c03be0)
+++ b/src/main/java/Ui/UserInterface.java	(date 1669712967474)
@@ -172,6 +172,7 @@
             }
         }
 
+
         //Create member
         controller.createClubMember(nameInput, ageInput, setActive, swim);
         controller.junoirOrsenoir();
@@ -255,7 +256,7 @@
         } while (!userChoiceFalse);
 
         do {
-            System.out.println("Member age: " + editMember.getAge());
+            System.out.println("Member age : " + editMember.getAge());
 
             try {
                 System.out.print("Type your update here: ");
Index: data/clubmembersData.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>J1;Mathias Thomsen;14;Passive;Junior;competition\nJ2;Mathias ;11;Passive;Junior;competition\nS3;Marcus;23;Passive;Senior;exerciser\nJ4;Hans ;11;Passive;Junior;exerciser\nJ5;Mathias haha;17;Passive;Junior;exerciser\nJ6;Marcus ;17;Passive;Junior;exersicer\nJ7;Marcus ;11;Passive;Junior;exerciser\nS8;Christian ;44;Passive;Senior;competition\nS9;Hans ;23;Passive;Senior;competition\nS10;Hans;23;Passive;Senior;exerciser\nS11;mathias thomsen;23;Passive;Senior;Exerciser\nS12;Mathias;45;Passive;Senior;Competition\nS13;chill;22;Passive;Senior;Exerciser\nS14;orale;21;Passive;Senior;Exerciser\nS15;d;22;Active;Senior;Exerciser\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/data/clubmembersData.csv b/data/clubmembersData.csv
--- a/data/clubmembersData.csv	(revision 5487a045566319c64898be7bfc063cf4d1c03be0)
+++ b/data/clubmembersData.csv	(date 1669659163163)
@@ -10,6 +10,6 @@
 S10;Hans;23;Passive;Senior;exerciser
 S11;mathias thomsen;23;Passive;Senior;Exerciser
 S12;Mathias;45;Passive;Senior;Competition
-S13;chill;22;Passive;Senior;Exerciser
+J13;chill;10;Active;Junior;Exerciser
 S14;orale;21;Passive;Senior;Exerciser
-S15;d;22;Active;Senior;Exerciser
+S15;d;22;Passive;Senior;Exerciser
Index: src/main/java/ClubMember/ClubMember.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ClubMember;\n\npublic class ClubMember {\n    private String name;\n    private int age;\n    private boolean active;\n    private String membershipType;\n    private String swimType;\n    private String membershipNumber;\n\n    public ClubMember(){\n\n    }\n    public ClubMember(String membershipNumber, String name, int age, boolean active, String membershipType, String swimType) {\n        this.membershipNumber = membershipNumber;\n        this.name = name;\n        this.age = age;\n        this.active = active;\n        this.membershipType = membershipType;\n        this.swimType = swimType;\n\n    }\n    public ClubMember(String name, int age, boolean active, String swimType) {\n        this.name = name;\n        this.age = age;\n        this.active = active;\n        this.swimType = swimType;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setAge(String age) {\n        this.age = Integer.parseInt(age);\n    }\n\n    public boolean isActivityStatus() {\n        return active;\n    }\n\n    public void setActivityStatus(boolean active) {\n        this.active = active;\n    }\n\n    public String getMembershipType() {\n        return membershipType;\n    }\n\n    public void setMembershipType(String membershipType) {\n        this.membershipType = membershipType;\n    }\n\n    public String isSwimType() {\n        return swimType;\n    }\n\n    public void setSwimType(String swimType) {\n        this.swimType = swimType;\n    }\n\n    public String getMembershipNumber() {\n        return membershipNumber;\n    }\n\n    public void setMembershipNumber(String membershipNumber) {\n\n        this.membershipNumber = membershipNumber;\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ClubMember/ClubMember.java b/src/main/java/ClubMember/ClubMember.java
--- a/src/main/java/ClubMember/ClubMember.java	(revision 5487a045566319c64898be7bfc063cf4d1c03be0)
+++ b/src/main/java/ClubMember/ClubMember.java	(date 1669678509075)
@@ -1,5 +1,7 @@
 package ClubMember;
 
+import java.time.LocalDate;
+
 public class ClubMember {
     private String name;
     private int age;
@@ -39,6 +41,7 @@
         return age;
     }
 
+
     public void setAge(String age) {
         this.age = Integer.parseInt(age);
     }
Index: src/main/java/DataSource/Database.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package DataSource;\n\nimport ClubMember.ClubMember;\n\nimport java.util.ArrayList;\n\npublic class Database {\n    private boolean change = false;\n    public ArrayList<ClubMember> clubMembers = new ArrayList<>();\n\n\n    public void createClubMember(String name, int age, boolean activityStatus,  String swimType) {\n        ClubMember clubMember = new ClubMember(name, age, activityStatus, swimType);\n        clubMembers.add(clubMember);\n\n        change = true; // To the save method, so we only save to the txt file if a change has been made.\n\n    }\n\n    public boolean deleteMember(ClubMember clubMember){\n        boolean result = clubMembers.remove(clubMember);\n\n        change = true;\n\n        return result;\n    }\n\n    public ArrayList<ClubMember> getClubMembers() {\n        return clubMembers;\n    }\n\n    public void clearData() {\n        clubMembers.clear();\n\n    }\n\n    public ArrayList<ClubMember> findMember(String searchTerm){\n        ArrayList<ClubMember> searchResult = new ArrayList<>();\n        for (ClubMember member : clubMembers) {\n            if (member.getName().toLowerCase().contains(searchTerm)) {\n                searchResult.add(member);\n            }\n        }return searchResult;\n\n    }\n\n    public int getSizeOfDatabase(int number) {\n        return number;\n    }\n\n\n    public void juniorOrSenior(){\n        for (ClubMember member : clubMembers) {\n            if (member.getAge() >= 18) {\n                member.setMembershipType(\"Senior\");\n            } else if (member.getAge() < 18) {\n                member.setMembershipType(\"Junior\");\n            }\n        }\n    }\n\n    public void setClubMemberNumber() {\n\n        int number = 1;\n\n        for (ClubMember member : clubMembers) {\n            if(member.getMembershipType() == \"Senior\") {\n                member.setMembershipNumber(\"S\" + number++);\n            }else {\n                member.setMembershipNumber(\"J\" + number++);\n            }\n        }\n    }\n\n\n\n\n\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/DataSource/Database.java b/src/main/java/DataSource/Database.java
--- a/src/main/java/DataSource/Database.java	(revision 5487a045566319c64898be7bfc063cf4d1c03be0)
+++ b/src/main/java/DataSource/Database.java	(date 1669715902349)
@@ -72,6 +72,16 @@
         }
     }
 
+    public void setPayment(){
+        for (ClubMember member : clubMembers) {
+            if (member.getAge() >= 18) {
+                member.setPayment(500);
+            } else if (member.getAge() < 18) {
+                member.setPayment(1600);
+            }
+        }
+    }
+
 
 
 
